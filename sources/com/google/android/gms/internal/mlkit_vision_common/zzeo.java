package com.google.android.gms.internal.mlkit_vision_common;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;

final class zzeo implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzeo zza = new zzeo();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzae zzae2 = new zzae();
        zzae2.zza(1);
        zzb = builder.withProperty(zzae2.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzae zzae3 = new zzae();
        zzae3.zza(2);
        zzc = builder2.withProperty(zzae3.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzae zzae4 = new zzae();
        zzae4.zza(37);
        zzd = builder3.withProperty(zzae4.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzae zzae5 = new zzae();
        zzae5.zza(61);
        zze = builder4.withProperty(zzae5.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzae zzae6 = new zzae();
        zzae6.zza(3);
        zzf = builder5.withProperty(zzae6.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzae zzae7 = new zzae();
        zzae7.zza(20);
        zzg = builder6.withProperty(zzae7.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzae zzae8 = new zzae();
        zzae8.zza(4);
        zzh = builder7.withProperty(zzae8.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzae zzae9 = new zzae();
        zzae9.zza(29);
        zzi = builder8.withProperty(zzae9.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzae zzae10 = new zzae();
        zzae10.zza(5);
        zzj = builder9.withProperty(zzae10.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzae zzae11 = new zzae();
        zzae11.zza(59);
        zzk = builder10.withProperty(zzae11.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzae zzae12 = new zzae();
        zzae12.zza(6);
        zzl = builder11.withProperty(zzae12.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzae zzae13 = new zzae();
        zzae13.zza(79);
        zzm = builder12.withProperty(zzae13.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzae zzae14 = new zzae();
        zzae14.zza(7);
        zzn = builder13.withProperty(zzae14.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzae zzae15 = new zzae();
        zzae15.zza(58);
        zzo = builder14.withProperty(zzae15.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzae zzae16 = new zzae();
        zzae16.zza(48);
        zzp = builder15.withProperty(zzae16.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzae zzae17 = new zzae();
        zzae17.zza(49);
        zzq = builder16.withProperty(zzae17.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzae zzae18 = new zzae();
        zzae18.zza(18);
        zzr = builder17.withProperty(zzae18.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzae zzae19 = new zzae();
        zzae19.zza(26);
        zzs = builder18.withProperty(zzae19.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzae zzae20 = new zzae();
        zzae20.zza(27);
        zzt = builder19.withProperty(zzae20.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzae zzae21 = new zzae();
        zzae21.zza(28);
        zzu = builder20.withProperty(zzae21.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzae zzae22 = new zzae();
        zzae22.zza(44);
        zzv = builder21.withProperty(zzae22.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzae zzae23 = new zzae();
        zzae23.zza(45);
        zzw = builder22.withProperty(zzae23.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzae zzae24 = new zzae();
        zzae24.zza(19);
        zzx = builder23.withProperty(zzae24.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzae zzae25 = new zzae();
        zzae25.zza(21);
        zzy = builder24.withProperty(zzae25.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzae zzae26 = new zzae();
        zzae26.zza(22);
        zzz = builder25.withProperty(zzae26.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzae zzae27 = new zzae();
        zzae27.zza(8);
        zzA = builder26.withProperty(zzae27.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzae zzae28 = new zzae();
        zzae28.zza(9);
        zzB = builder27.withProperty(zzae28.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzae zzae29 = new zzae();
        zzae29.zza(10);
        zzC = builder28.withProperty(zzae29.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzae zzae30 = new zzae();
        zzae30.zza(11);
        zzD = builder29.withProperty(zzae30.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzae zzae31 = new zzae();
        zzae31.zza(12);
        zzE = builder30.withProperty(zzae31.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzae zzae32 = new zzae();
        zzae32.zza(13);
        zzF = builder31.withProperty(zzae32.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzae zzae33 = new zzae();
        zzae33.zza(14);
        zzG = builder32.withProperty(zzae33.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzae zzae34 = new zzae();
        zzae34.zza(15);
        zzH = builder33.withProperty(zzae34.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzae zzae35 = new zzae();
        zzae35.zza(16);
        zzI = builder34.withProperty(zzae35.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzae zzae36 = new zzae();
        zzae36.zza(17);
        zzJ = builder35.withProperty(zzae36.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzae zzae37 = new zzae();
        zzae37.zza(23);
        zzK = builder36.withProperty(zzae37.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzae zzae38 = new zzae();
        zzae38.zza(24);
        zzL = builder37.withProperty(zzae38.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzae zzae39 = new zzae();
        zzae39.zza(25);
        zzM = builder38.withProperty(zzae39.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzae zzae40 = new zzae();
        zzae40.zza(39);
        zzN = builder39.withProperty(zzae40.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzae zzae41 = new zzae();
        zzae41.zza(40);
        zzO = builder40.withProperty(zzae41.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzae zzae42 = new zzae();
        zzae42.zza(30);
        zzP = builder41.withProperty(zzae42.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzae zzae43 = new zzae();
        zzae43.zza(31);
        zzQ = builder42.withProperty(zzae43.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzae zzae44 = new zzae();
        zzae44.zza(32);
        zzR = builder43.withProperty(zzae44.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzae zzae45 = new zzae();
        zzae45.zza(33);
        zzS = builder44.withProperty(zzae45.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzae zzae46 = new zzae();
        zzae46.zza(34);
        zzT = builder45.withProperty(zzae46.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzae zzae47 = new zzae();
        zzae47.zza(35);
        zzU = builder46.withProperty(zzae47.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzae zzae48 = new zzae();
        zzae48.zza(36);
        zzV = builder47.withProperty(zzae48.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzae zzae49 = new zzae();
        zzae49.zza(46);
        zzW = builder48.withProperty(zzae49.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzae zzae50 = new zzae();
        zzae50.zza(47);
        zzX = builder49.withProperty(zzae50.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzae zzae51 = new zzae();
        zzae51.zza(69);
        zzY = builder50.withProperty(zzae51.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzae zzae52 = new zzae();
        zzae52.zza(42);
        zzZ = builder51.withProperty(zzae52.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzae zzae53 = new zzae();
        zzae53.zza(50);
        zzaa = builder52.withProperty(zzae53.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzae zzae54 = new zzae();
        zzae54.zza(51);
        zzab = builder53.withProperty(zzae54.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzae zzae55 = new zzae();
        zzae55.zza(52);
        zzac = builder54.withProperty(zzae55.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzae zzae56 = new zzae();
        zzae56.zza(53);
        zzad = builder55.withProperty(zzae56.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzae zzae57 = new zzae();
        zzae57.zza(54);
        zzae = builder56.withProperty(zzae57.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzae zzae58 = new zzae();
        zzae58.zza(60);
        zzaf = builder57.withProperty(zzae58.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzae zzae59 = new zzae();
        zzae59.zza(85);
        zzag = builder58.withProperty(zzae59.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzae zzae60 = new zzae();
        zzae60.zza(86);
        zzah = builder59.withProperty(zzae60.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzae zzae61 = new zzae();
        zzae61.zza(87);
        zzai = builder60.withProperty(zzae61.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzae zzae62 = new zzae();
        zzae62.zza(55);
        zzaj = builder61.withProperty(zzae62.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzae zzae63 = new zzae();
        zzae63.zza(56);
        zzak = builder62.withProperty(zzae63.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzae zzae64 = new zzae();
        zzae64.zza(57);
        zzal = builder63.withProperty(zzae64.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzae zzae65 = new zzae();
        zzae65.zza(62);
        zzam = builder64.withProperty(zzae65.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzae zzae66 = new zzae();
        zzae66.zza(63);
        zzan = builder65.withProperty(zzae66.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzae zzae67 = new zzae();
        zzae67.zza(64);
        zzao = builder66.withProperty(zzae67.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzae zzae68 = new zzae();
        zzae68.zza(65);
        zzap = builder67.withProperty(zzae68.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzae zzae69 = new zzae();
        zzae69.zza(66);
        zzaq = builder68.withProperty(zzae69.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzae zzae70 = new zzae();
        zzae70.zza(67);
        zzar = builder69.withProperty(zzae70.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzae zzae71 = new zzae();
        zzae71.zza(68);
        zzas = builder70.withProperty(zzae71.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzae zzae72 = new zzae();
        zzae72.zza(70);
        zzat = builder71.withProperty(zzae72.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzae zzae73 = new zzae();
        zzae73.zza(71);
        zzau = builder72.withProperty(zzae73.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzae zzae74 = new zzae();
        zzae74.zza(72);
        zzav = builder73.withProperty(zzae74.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzae zzae75 = new zzae();
        zzae75.zza(73);
        zzaw = builder74.withProperty(zzae75.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzae zzae76 = new zzae();
        zzae76.zza(74);
        zzax = builder75.withProperty(zzae76.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzae zzae77 = new zzae();
        zzae77.zza(75);
        zzay = builder76.withProperty(zzae77.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzae zzae78 = new zzae();
        zzae78.zza(76);
        zzaz = builder77.withProperty(zzae78.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzae zzae79 = new zzae();
        zzae79.zza(77);
        zzaA = builder78.withProperty(zzae79.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzae zzae80 = new zzae();
        zzae80.zza(78);
        zzaB = builder79.withProperty(zzae80.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzae zzae81 = new zzae();
        zzae81.zza(80);
        zzaC = builder80.withProperty(zzae81.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzae zzae82 = new zzae();
        zzae82.zza(81);
        zzaD = builder81.withProperty(zzae82.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzae zzae83 = new zzae();
        zzae83.zza(82);
        zzaE = builder82.withProperty(zzae83.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzae zzae84 = new zzae();
        zzae84.zza(83);
        zzaF = builder83.withProperty(zzae84.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzae zzae85 = new zzae();
        zzae85.zza(84);
        zzaG = builder84.withProperty(zzae85.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzae zzae86 = new zzae();
        zzae86.zza(88);
        zzaH = builder85.withProperty(zzae86.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzae zzae87 = new zzae();
        zzae87.zza(89);
        zzaI = builder86.withProperty(zzae87.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzae zzae88 = new zzae();
        zzae88.zza(90);
        zzaJ = builder87.withProperty(zzae88.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzae zzae89 = new zzae();
        zzae89.zza(91);
        zzaK = builder88.withProperty(zzae89.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzae zzae90 = new zzae();
        zzae90.zza(92);
        zzaL = builder89.withProperty(zzae90.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzae zzae91 = new zzae();
        zzae91.zza(93);
        zzaM = builder90.withProperty(zzae91.zzb()).build();
    }

    private zzeo() {
    }

    public final /* bridge */ /* synthetic */ void encode(Object obj, Object obj2) throws IOException {
        zziy zziy = (zziy) obj;
        ObjectEncoderContext objectEncoderContext = (ObjectEncoderContext) obj2;
        objectEncoderContext.add(zzb, (Object) zziy.zzc());
        objectEncoderContext.add(zzc, (Object) zziy.zzb());
        objectEncoderContext.add(zzd, (Object) null);
        objectEncoderContext.add(zze, (Object) null);
        objectEncoderContext.add(zzf, (Object) null);
        objectEncoderContext.add(zzg, (Object) null);
        objectEncoderContext.add(zzh, (Object) null);
        objectEncoderContext.add(zzi, (Object) null);
        objectEncoderContext.add(zzj, (Object) null);
        objectEncoderContext.add(zzk, (Object) null);
        objectEncoderContext.add(zzl, (Object) null);
        objectEncoderContext.add(zzm, (Object) null);
        objectEncoderContext.add(zzn, (Object) null);
        objectEncoderContext.add(zzo, (Object) null);
        objectEncoderContext.add(zzp, (Object) null);
        objectEncoderContext.add(zzq, (Object) null);
        objectEncoderContext.add(zzr, (Object) null);
        objectEncoderContext.add(zzs, (Object) null);
        objectEncoderContext.add(zzt, (Object) null);
        objectEncoderContext.add(zzu, (Object) null);
        objectEncoderContext.add(zzv, (Object) null);
        objectEncoderContext.add(zzw, (Object) null);
        objectEncoderContext.add(zzx, (Object) null);
        objectEncoderContext.add(zzy, (Object) null);
        objectEncoderContext.add(zzz, (Object) null);
        objectEncoderContext.add(zzA, (Object) null);
        objectEncoderContext.add(zzB, (Object) null);
        objectEncoderContext.add(zzC, (Object) null);
        objectEncoderContext.add(zzD, (Object) null);
        objectEncoderContext.add(zzE, (Object) null);
        objectEncoderContext.add(zzF, (Object) null);
        objectEncoderContext.add(zzG, (Object) null);
        objectEncoderContext.add(zzH, (Object) null);
        objectEncoderContext.add(zzI, (Object) null);
        objectEncoderContext.add(zzJ, (Object) null);
        objectEncoderContext.add(zzK, (Object) null);
        objectEncoderContext.add(zzL, (Object) null);
        objectEncoderContext.add(zzM, (Object) null);
        objectEncoderContext.add(zzN, (Object) null);
        objectEncoderContext.add(zzO, (Object) null);
        objectEncoderContext.add(zzP, (Object) null);
        objectEncoderContext.add(zzQ, (Object) null);
        objectEncoderContext.add(zzR, (Object) null);
        objectEncoderContext.add(zzS, (Object) null);
        objectEncoderContext.add(zzT, (Object) null);
        objectEncoderContext.add(zzU, (Object) null);
        objectEncoderContext.add(zzV, (Object) null);
        objectEncoderContext.add(zzW, (Object) null);
        objectEncoderContext.add(zzX, (Object) null);
        objectEncoderContext.add(zzY, (Object) null);
        objectEncoderContext.add(zzZ, (Object) null);
        objectEncoderContext.add(zzaa, (Object) zziy.zza());
        objectEncoderContext.add(zzab, (Object) null);
        objectEncoderContext.add(zzac, (Object) null);
        objectEncoderContext.add(zzad, (Object) null);
        objectEncoderContext.add(zzae, (Object) null);
        objectEncoderContext.add(zzaf, (Object) null);
        objectEncoderContext.add(zzag, (Object) null);
        objectEncoderContext.add(zzah, (Object) null);
        objectEncoderContext.add(zzai, (Object) null);
        objectEncoderContext.add(zzaj, (Object) null);
        objectEncoderContext.add(zzak, (Object) null);
        objectEncoderContext.add(zzal, (Object) null);
        objectEncoderContext.add(zzam, (Object) null);
        objectEncoderContext.add(zzan, (Object) null);
        objectEncoderContext.add(zzao, (Object) null);
        objectEncoderContext.add(zzap, (Object) null);
        objectEncoderContext.add(zzaq, (Object) null);
        objectEncoderContext.add(zzar, (Object) null);
        objectEncoderContext.add(zzas, (Object) null);
        objectEncoderContext.add(zzat, (Object) null);
        objectEncoderContext.add(zzau, (Object) null);
        objectEncoderContext.add(zzav, (Object) null);
        objectEncoderContext.add(zzaw, (Object) null);
        objectEncoderContext.add(zzax, (Object) null);
        objectEncoderContext.add(zzay, (Object) null);
        objectEncoderContext.add(zzaz, (Object) null);
        objectEncoderContext.add(zzaA, (Object) null);
        objectEncoderContext.add(zzaB, (Object) null);
        objectEncoderContext.add(zzaC, (Object) null);
        objectEncoderContext.add(zzaD, (Object) null);
        objectEncoderContext.add(zzaE, (Object) null);
        objectEncoderContext.add(zzaF, (Object) null);
        objectEncoderContext.add(zzaG, (Object) null);
        objectEncoderContext.add(zzaH, (Object) null);
        objectEncoderContext.add(zzaI, (Object) null);
        objectEncoderContext.add(zzaJ, (Object) null);
        objectEncoderContext.add(zzaK, (Object) null);
        objectEncoderContext.add(zzaL, (Object) null);
        objectEncoderContext.add(zzaM, (Object) null);
    }
}
